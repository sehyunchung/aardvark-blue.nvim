--[[
  highlights.lua
  
  Auto-generated by build/generate.ts
  Generated on: 2025-08-20T05:55:21.788Z
  
  DO NOT EDIT THIS FILE DIRECTLY!
  Instead, modify the JSON files in colors/ directory and run:
    npm run generate
  
  Source files:
    - colors/palette.json
    - colors/semantic.json
    - colors/vscode-tokens.json
    - colors/color-assignments.json
--]]

local M = {}

function M.setup(palette, options)
  local highlights = {}
  
  -- Ensure styles exist with defaults
  local styles = options.styles or {
    comments = {},
    keywords = {},
    functions = {},
    variables = {},
  }

  -- Editor highlights
  highlights.Normal = { fg = "#dddddd", bg = options.transparent and palette.none or "#102040" }
  highlights.NormalFloat = { fg = "#dddddd", bg = options.transparent and palette.none or "#0a1530" }
  highlights.NormalNC = { fg = "#dddddd", bg = options.transparent and palette.none or "#102040" }
  highlights.LineNr = { fg = "#6a7a8a" }
  highlights.CursorLine = { bg = "#1a3050" }
  highlights.CursorLineNr = { fg = "#60a4ec", bold = true }
  highlights.CursorColumn = { bg = "#1a3050" }
  highlights.ColorColumn = { bg = "#1a3050" }
  highlights.Cursor = { fg = "#102040", bg = "#007acc" }
  highlights.Visual = { bg = "#bfdbfe" }
  highlights.VisualNOS = { bg = "#bfdbfe" }
  highlights.Search = { fg = "#102040", bg = "#ffe763" }
  highlights.IncSearch = { fg = "#102040", bg = "#ffe763" }
  highlights.CurSearch = { fg = "#102040", bg = "#ffe763" }
  highlights.MatchParen = { fg = "#60b6cb", bold = true }

  -- Syntax highlighting
  highlights.Comment = vim.tbl_extend("force", { fg = "#6a7a8a" }, styles.comments)
  highlights.Constant = { fg = "#f05b50" }
  highlights.String = { fg = "#95dc55" }
  highlights.Character = { fg = "#95dc55" }
  highlights.Number = { fg = "#60a4ec" }
  highlights.Boolean = { fg = "#f05b50" }
  highlights.Float = { fg = "#60a4ec" }
  highlights.Identifier = vim.tbl_extend("force", { fg = "#dddddd" }, styles.variables)
  highlights.Function = vim.tbl_extend("force", { fg = "#ffe763" }, styles.functions)
  highlights.Statement = vim.tbl_extend("force", { fg = "#c43ac3" }, styles.keywords)
  highlights.Conditional = vim.tbl_extend("force", { fg = "#c43ac3" }, styles.keywords)
  highlights.Repeat = vim.tbl_extend("force", { fg = "#c43ac3" }, styles.keywords)
  highlights.Label = vim.tbl_extend("force", { fg = "#c43ac3" }, styles.keywords)
  highlights.Operator = { fg = "#60b6cb" }
  highlights.Keyword = vim.tbl_extend("force", { fg = "#c43ac3" }, styles.keywords)
  highlights.Exception = vim.tbl_extend("force", { fg = "#aa342e" }, styles.keywords)
  highlights.PreProc = { fg = "#dbba00" }
  highlights.Include = { fg = "#c43ac3" }
  highlights.Define = { fg = "#c43ac3" }
  highlights.Macro = { fg = "#dbba00" }
  highlights.PreCondit = { fg = "#dbba00" }
  highlights.Type = { fg = "#60b6cb" }
  highlights.StorageClass = { fg = "#dbba00" }
  highlights.Structure = { fg = "#dbba00" }
  highlights.Typedef = { fg = "#dbba00" }
  highlights.Special = { fg = "#008eb0" }
  highlights.SpecialChar = { fg = "#60b6cb" }
  highlights.Tag = { fg = "#1370d3" }
  highlights.Delimiter = { fg = "#bebebe" }
  highlights.SpecialComment = { fg = "#60b6cb" }
  highlights.Debug = { fg = "#aa342e" }
  highlights.Underlined = { underline = true }
  highlights.Ignore = { fg = "#6a7a8a" }
  highlights.Error = { fg = "#f05b50" }
  highlights.Todo = { fg = "#102040", bg = "#dbba00", bold = true }

  -- TreeSitter highlights
  highlights["@variable"] = highlights.Identifier
  highlights["@variable.builtin"] = { fg = "#aa342e" }
  highlights["@variable.parameter"] = { fg = "#f7f7f7" }
  highlights["@variable.member"] = { fg = "#1370d3" }
  highlights["@constant"] = highlights.Constant
  highlights["@constant.builtin"] = { fg = "#aa342e" }
  highlights["@constant.macro"] = { fg = "#dbba00" }
  highlights["@module"] = { fg = "#dbba00" }
  highlights["@label"] = highlights.Label
  highlights["@string"] = { fg = "#95dc55" }
  highlights["@string.escape"] = { fg = "#008eb0" }
  highlights["@string.special"] = { fg = "#008eb0" }
  highlights["@character"] = highlights.Character
  highlights["@number"] = { fg = "#60a4ec" }
  highlights["@boolean"] = highlights.Boolean
  highlights["@float"] = { fg = "#60a4ec" }
  highlights["@function"] = { fg = "#ffe763" }
  highlights["@function.builtin"] = { fg = "#ffe763" }
  highlights["@function.macro"] = { fg = "#ffe763" }
  highlights["@function.method"] = { fg = "#ffe763" }
  highlights["@constructor"] = { fg = "#ffe763" }
  highlights["@operator"] = { fg = "#60b6cb" }
  highlights["@keyword"] = highlights.Keyword
  highlights["@keyword.function"] = { fg = "#60a4ec" }
  highlights["@keyword.operator"] = { fg = "#c43ac3" }
  highlights["@keyword.return"] = { fg = "#c43ac3" }
  highlights["@keyword.conditional"] = { fg = "#c43ac3" }
  highlights["@keyword.repeat"] = { fg = "#c43ac3" }
  highlights["@keyword.import"] = { fg = "#c43ac3" }
  highlights["@keyword.exception"] = { fg = "#c43ac3" }
  highlights["@type"] = { fg = "#60b6cb" }
  highlights["@type.builtin"] = { fg = "#60b6cb" }
  highlights["@type.definition"] = { fg = "#60b6cb" }
  highlights["@attribute"] = { fg = "#008eb0" }
  highlights["@property"] = { fg = "#1370d3" }
  highlights["@comment"] = highlights.Comment
  highlights["@comment.todo"] = highlights.Todo
  highlights["@comment.warning"] = { fg = "#ffe763" }
  highlights["@comment.note"] = { fg = "#60a4ec" }
  highlights["@comment.error"] = { fg = "#f05b50" }
  highlights["@punctuation.delimiter"] = highlights.Delimiter
  highlights["@punctuation.bracket"] = { fg = "#bebebe" }
  highlights["@punctuation.special"] = { fg = "#008eb0" }
  highlights["@tag"] = highlights.Tag
  highlights["@tag.attribute"] = { fg = "#dbba00" }
  highlights["@tag.delimiter"] = { fg = "#bebebe" }

  -- TypeScript specific highlights
  highlights["@keyword.modifier"] = { fg = "#dbba00" }
  highlights["@keyword.type"] = { fg = "#c43ac3" }
  highlights["@keyword.operator.typescript"] = { fg = "#008eb0" }
  highlights["@attribute"] = { fg = "#008eb0" }

  -- JSX/TSX specific highlights (override general @tag for JSX)
  highlights["@tag.tsx"] = { fg = "#f05b50" }
  highlights["@tag.builtin.tsx"] = { fg = "#60b6cb" }
  highlights["@tag.attribute.tsx"] = { fg = "#ffe763" }
  highlights["@tag.delimiter.tsx"] = { fg = "#6a7a8a" }

  -- JSX member expression components (Tabs.Root, UI.Form.Field, etc.)
  highlights["@variable.member.tsx"] = { fg = "#f05b50" }
  highlights["@property.tsx"] = { fg = "#f05b50" }

  -- LSP highlights
  highlights.LspReferenceText = { bg = "#1a3050" }
  highlights.LspReferenceRead = { bg = "#1a3050" }
  highlights.LspReferenceWrite = { bg = "#1a3050" }
  highlights.DiagnosticError = { fg = "#f05b50" }
  highlights.DiagnosticWarn = { fg = "#ffe763" }
  highlights.DiagnosticInfo = { fg = "#60a4ec" }
  highlights.DiagnosticHint = { fg = "#60b6cb" }
  highlights.DiagnosticSignError = { fg = "#f05b50" }
  highlights.DiagnosticSignWarn = { fg = "#ffe763" }
  highlights.DiagnosticSignInfo = { fg = "#60a4ec" }
  highlights.DiagnosticSignHint = { fg = "#60b6cb" }
  highlights.DiagnosticUnderlineError = { underline = true, sp = "#f05b50" }
  highlights.DiagnosticUnderlineWarn = { underline = true, sp = "#ffe763" }
  highlights.DiagnosticUnderlineInfo = { underline = true, sp = "#60a4ec" }
  highlights.DiagnosticUnderlineHint = { underline = true, sp = "#60b6cb" }

  -- Telescope plugin highlights
  highlights.TelescopeBorder = { fg = "#2a4060" }
  highlights.TelescopeNormal = { fg = "#dddddd" }
  highlights.TelescopeSelection = { bg = "#051020" }
  highlights.TelescopeSelectionCaret = { fg = "#60a4ec" }
  highlights.TelescopeMultiSelection = { bg = "#0a1530" }
  highlights.TelescopeMultiIcon = { fg = "#008eb0" }
  highlights.TelescopePromptNormal = { fg = "#dddddd" }
  highlights.TelescopePromptBorder = { fg = "#2a4060" }
  highlights.TelescopePromptTitle = { fg = "#60a4ec", bold = true }
  highlights.TelescopeResultsTitle = { fg = "#008eb0", bold = true }
  highlights.TelescopePreviewTitle = { fg = "#4b8c0f", bold = true }

  -- UI elements
  highlights.Pmenu = { fg = "#dddddd", bg = "#0a1530" }
  highlights.PmenuSel = { fg = "#102040", bg = "#1370d3" }
  highlights.PmenuSbar = { bg = "#1a3050" }
  highlights.PmenuThumb = { bg = "#2a4060" }
  highlights.StatusLine = { fg = "#dddddd", bg = "#1a3050" }
  highlights.StatusLineNC = { fg = "#6a7a8a", bg = "#0a1530" }
  highlights.TabLine = { fg = "#6a7a8a", bg = "#0a1530" }
  highlights.TabLineFill = { bg = "#0a1530" }
  highlights.TabLineSel = { fg = "#dddddd", bg = "#102040" }
  highlights.WinSeparator = { fg = "#2a4060" }
  highlights.VertSplit = { fg = "#2a4060" }
  highlights.Folded = { fg = "#6a7a8a", bg = "#1a3050" }
  highlights.FoldColumn = { fg = "#6a7a8a" }
  highlights.SignColumn = { fg = "#dddddd", bg = options.transparent and palette.none or "#102040" }
  highlights.Directory = { fg = "#1370d3" }
  highlights.Title = { fg = "#60a4ec", bold = true }
  highlights.ErrorMsg = { fg = "#f05b50" }
  highlights.WarningMsg = { fg = "#ffe763" }
  highlights.Question = { fg = "#008eb0" }
  highlights.MoreMsg = { fg = "#008eb0" }
  highlights.ModeMsg = { fg = "#008eb0" }

  -- Terminal colors
  if options.terminal_colors then
    vim.g.terminal_color_0 = "#191919"
    vim.g.terminal_color_1 = "#aa342e"
    vim.g.terminal_color_2 = "#4b8c0f"
    vim.g.terminal_color_3 = "#dbba00"
    vim.g.terminal_color_4 = "#1370d3"
    vim.g.terminal_color_5 = "#c43ac3"
    vim.g.terminal_color_6 = "#008eb0"
    vim.g.terminal_color_7 = "#bebebe"
    vim.g.terminal_color_8 = "#454545"
    vim.g.terminal_color_9 = "#f05b50"
    vim.g.terminal_color_10 = "#95dc55"
    vim.g.terminal_color_11 = "#ffe763"
    vim.g.terminal_color_12 = "#60a4ec"
    vim.g.terminal_color_13 = "#e26be2"
    vim.g.terminal_color_14 = "#60b6cb"
    vim.g.terminal_color_15 = "#f7f7f7"
  end

  return highlights
end

return M